{"version":3,"file":"main.ec24da844abf022c8b95.js","mappings":"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","sources":["webpack://my-project/./src/js/Timer.js","webpack://my-project/./src/js/index.js"],"sourcesContent":["export default class AgeTimer {\n    constructor(birthDate, elementId = 'ageTimer') {\n        this.birthDate = new Date(birthDate);\n        this.element = document.getElementById(elementId);\n        this.yearsElement = document.getElementById('years');\n        this.monthsElement = document.getElementById('months');\n        this.daysElement = document.getElementById('days');\n        this.yearsTextElement = document.getElementById('yearsText');\n        this.monthsTextElement = document.getElementById('monthsText');\n        this.daysTextElement = document.getElementById('daysText');\n\n        this.init();\n    }\n\n    // Функции для правильного склонения\n    getPluralText(count, type) {\n        const forms = {\n            'year': ['Год', 'Года', 'Лет'],\n            'month': ['Месяц', 'Месяца', 'Месяцев'],\n            'day': ['День', 'Дня', 'Дней']\n        };\n\n        const cases = [2, 0, 1, 1, 1, 2];\n        const titles = forms[type] || ['единица', 'единицы', 'единиц'];\n        const index = (count % 100 > 4 && count % 100 < 20) ? 2 : cases[Math.min(count % 10, 5)];\n\n        return titles[index];\n    }\n\n    // Расчет возраста\n    calculateAge() {\n        const now = new Date();\n        let years = now.getFullYear() - this.birthDate.getFullYear();\n        let months = now.getMonth() - this.birthDate.getMonth();\n        let days = now.getDate() - this.birthDate.getDate();\n\n        // Корректировка значений\n        if (days < 0) {\n            months--;\n            // Получаем количество дней в предыдущем месяце\n            const prevMonth = new Date(now.getFullYear(), now.getMonth(), 0);\n            days += prevMonth.getDate();\n        }\n\n        if (months < 0) {\n            years--;\n            months += 12;\n        }\n\n        return { years, months, days };\n    }\n\n    // Обновление отображения\n    updateDisplay() {\n        const age = this.calculateAge();\n\n        this.yearsElement.textContent = age.years;\n        this.monthsElement.textContent = age.months;\n        this.daysElement.textContent = age.days;\n\n        this.yearsTextElement.textContent = this.getPluralText(age.years, 'year');\n        this.monthsTextElement.textContent = this.getPluralText(age.months, 'month');\n        this.daysTextElement.textContent = this.getPluralText(age.days, 'day');\n    }\n\n    // Инициализация таймера\n    init() {\n        // Проверка корректности даты рождения\n        if (isNaN(this.birthDate.getTime())) {\n            console.error('Некорректная дата рождения');\n            return;\n        }\n\n        // Первое обновление\n        this.updateDisplay();\n\n        // Обновление каждую секунду\n        this.interval = setInterval(() => {\n            this.updateDisplay();\n        }, 1000);\n    }\n\n    // Остановка таймера\n    stop() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n\n    // Установка новой даты рождения\n    setBirthDate(newBirthDate) {\n        this.birthDate = new Date(newBirthDate);\n        if (isNaN(this.birthDate.getTime())) {\n            console.error('Некорректная дата рождения');\n            return;\n        }\n        this.updateDisplay();\n    }\n}\n\n// Использование:\n// Укажите дату рождения в формате: 'YYYY-MM-DD' или 'YYYY/MM/DD'\n//const ageTimer = new AgeTimer('1990-05-15'); // Пример даты рождения\n\n// Для остановки таймера:\n// ageTimer.stop();\n\n// Для изменения даты рождения:\n// ageTimer.setBirthDate('1985-12-25');\n","import AgeTimer from './Timer.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (!window.CARD_DATA_PLACEHOLDER) {\n        throw new Error(\"not found CARD DATA\")\n    }\n    if (window.CARD_DATA_PLACEHOLDER.template === \"jumble\") {\n        const { name, message, photo, dateStr } = window.CARD_DATA_PLACEHOLDER;\n      \n        if (dateStr) {\n            new AgeTimer(dateStr);\n        }\n\n        const heartButtons = document.querySelectorAll('.heartBtn')\n        if (heartButtons) {\n            heartButtons.forEach((el) => {\n                el.addEventListener('click', function (e) {\n                    // Получаем координаты кнопки\n                    const rect = this.getBoundingClientRect();\n                    const parentElement = this.parentElement;\n                    // Создаем 5-7 сердечек\n                    const heartCount = Math.floor(Math.random() * 3) + 5;\n\n                    for (let i = 0; i < heartCount; i++) {\n                        // Создаем элемент сердца\n                        const heart = document.createElement('div');\n                        heart.className = 'heart-animated';\n\n                        // Устанавливаем начальные координаты\n                        const startX = (Math.random() - 0.5) * rect.width;\n                        const startY = (Math.random() - 0.5) * rect.height;\n                        const offsetX = (Math.random() - 0.5) * 80;\n\n                        heart.style.setProperty('--start-x', startX + 'px');\n                        heart.style.setProperty('--start-y', startY + 'px');\n                        heart.style.setProperty('--offset-x', offsetX + 'px');\n\n                        // Позиционируем относительно кнопки\n                        heart.style.right = 0 + 'px';\n                        heart.style.top = -rect.height + 'px';\n\n                        parentElement.appendChild(heart);\n\n                        // Удаляем после анимации\n                        heart.addEventListener('animationend', () => {\n                            heart.remove();\n                        });\n                    }\n                });\n            })\n        }\n        const baloon1 = document.querySelector('.baloon-one')\n        if (baloon1) {\n            baloon1.addEventListener('animationend', () => {\n                document.querySelector('.baloons').style.zIndex = -1\n                heartButtons[0].click()\n            });\n        }\n    }\n    if (window.CARD_DATA_PLACEHOLDER.template === \"retrowave\") {\n        // Stars Position\n        let topp = document.getElementById(\"top\")\n        function setStars(numS) {\n            for (let i = 0; i < numS; i++) {\n                let stars = document.createElement(\"div\")\n                stars.setAttribute(\"class\", \"stars\")\n                stars.style.left = 100 * Math.random() + \"%\"\n                stars.style.top = 55 * Math.random() + \"%\"\n                topp.appendChild(stars)\n            }\n        }\n        setStars(250)\n        // Sun Animation\n        let sunset = document.getElementById(\"sun\");\n        function synthSun(nmb) {\n            for (let i = 0; i < nmb * 2; i++) {\n                let sunin = document.createElement(\"div\")\n                sunin.setAttribute(\"class\", \"sun\")\n                sunin.style.animationDelay = -.5 * i++ + \"s\"\n                sunset.appendChild(sunin)\n            }\n        }\n        synthSun(8)\n    }\n});\n"],"names":["AgeTimer","birthDate","elementId","arguments","length","undefined","_classCallCheck","this","Date","element","document","getElementById","yearsElement","monthsElement","daysElement","yearsTextElement","monthsTextElement","daysTextElement","init","key","value","count","type","Math","min","now","years","getFullYear","months","getMonth","days","getDate","age","calculateAge","textContent","getPluralText","_this","isNaN","getTime","console","error","updateDisplay","interval","setInterval","clearInterval","newBirthDate","addEventListener","window","CARD_DATA_PLACEHOLDER","Error","template","_window$CARD_DATA_PLA","dateStr","name","message","photo","heartButtons","querySelectorAll","forEach","el","e","rect","getBoundingClientRect","parentElement","heartCount","floor","random","_loop","heart","createElement","className","startX","width","startY","height","offsetX","style","setProperty","right","top","appendChild","remove","i","baloon1","querySelector","zIndex","click","topp","stars","setAttribute","left","setStars","sunset","nmb","sunin","animationDelay","synthSun"],"sourceRoot":""}